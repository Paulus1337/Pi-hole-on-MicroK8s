apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: microk8s.io/hostpath
    volume.kubernetes.io/storage-provisioner: microk8s.io/hostpath
  finalizers:
  - kubernetes.io/pvc-protection
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
          f:io.portainer.kubernetes.application.name: {}
          f:io.portainer.kubernetes.application.owner: {}
      f:spec:
        f:accessModes: {}
        f:resources:
          f:requests:
            .: {}
            f:storage: {}
        f:storageClassName: {}
        f:volumeMode: {}
    manager: Mozilla
    operation: Update
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:pv.kubernetes.io/bind-completed: {}
          f:pv.kubernetes.io/bound-by-controller: {}
          f:volume.beta.kubernetes.io/storage-provisioner: {}
          f:volume.kubernetes.io/storage-provisioner: {}
      f:spec:
        f:volumeName: {}
    manager: kubelite
    operation: Update
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:accessModes: {}
        f:capacity:
          .: {}
          f:storage: {}
        f:phase: {}
    manager: kubelite
    operation: Update
    subresource: status
  name: pihole
  namespace: default
  selfLink: /api/v1/namespaces/default/persistentvolumeclaims/pihole
spec:
  accessModes:
  - ReadWriteOnly
  resources:
    requests:
      storage: 512M
  storageClassName: microk8s-hostpath
  volumeMode: Filesystem
